"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 2.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import json
import requests

from jwt.algorithms import RSAAlgorithm

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get(
    'SECRET_KEY', '*yel#on%ga376v$v!6a%&fzcky@agg=(59&o^fpz9827jy1sc-')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'corsheaders',
    'rest_framework',
    'rest_framework_gis',
    'django_filters',
    'airport',
    'forms',
    'users',
    'inspections',
    'work_orders',
    'tasks',
    'schedule',
    'operations_log',
    'notification',
    'django_sysinfo',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'request_logging.middleware.LoggingMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request'
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'backend.auth_api.JSONWebTokenAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 100,
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
}

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

# Tell Django where the project's translation files should be.
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

AWS_DEFAULT_REGION = 'us-east-1'
AWS_REGION = os.environ.get('AWS_REGION', AWS_DEFAULT_REGION)
STAGE = os.environ.get('STAGE', 'dev')
BACKEND_ID = os.environ.get('BACKEND_ID', 'local')
PROJECT_VERSION = os.environ.get('PROJECT_VERSION', 'dev')
BUILD_VERSION = os.environ.get('BUILD_VERSION', 'latest')
BASE_DOMAIN = os.environ.get('BASE_DOMAIN', 'localhost')
UI_DOMAIN = BACKEND_ID + '.' + BASE_DOMAIN
EXPIRY_FOR_EXPORT_DOCUMENT = os.environ.get('EXPIRY_FOR_EXPORT_DOCUMENT', 300)
APP_IMAGES_PREFIX = 'static/media/'

EMAIL_HOST = os.environ.get('EMAIL_HOST', 'email-smtp.us-east-1.amazonaws.com')
EMAIL_PORT = os.environ.get('EMAIL_PORT', 587)
CONFIGURATION_SET = os.environ.get('CONFIGURATION_SET', 'ConfigSet')
SENDERNAME = os.environ.get('SENDERNAME', 'AeroSimple')
EMAIL_HOST_USER = os.environ.get(
    'EMAIL_HOST_USER', 'portal@dev.aerosimple.com')
ASSET_IMAGES_PATH = os.environ.get('ASSET_IMAGES_PATH', '/images/asset_types')
NOTIFICATION_IMAGES_PATH = os.environ.get(
    'NOTIFICATION_IMAGES_PATH', '/images/notifications')
ASSET_IMAGES_PREFIX = os.environ.get(
    'ASSET_IMAGES_PREFIX', 'media/asset_types/')
NOTIFICATION_IMAGES_PREFIX = os.environ.get(
    'NOTIFICATION_IMAGES_PREFIX', 'media/notifications/')

JWT_ISSUER = os.environ['JWT_ISSUER']

JWKS_RESPONSE = None
JWKS_KEY = None
JWT_AUTH = None
try:
    JWKS_RESPONSE = requests.get(JWT_ISSUER + '/.well-known/jwks.json')
    JWKS_KEY = json.loads(JWKS_RESPONSE.content.decode('utf-8'))['keys'][1]
    JWT_AUTH = {
        'JWT_AUTH_HEADER_PREFIX': 'Bearer',
        'JWT_ALGORITHM': JWKS_KEY['alg'],
        'JWT_ISSUER': JWT_ISSUER,
        'JWT_PUBLIC_KEY': RSAAlgorithm.from_jwk(json.dumps(JWKS_KEY)),
    }
except:
    pass

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'backend.auth.AerosimpleBackend',
]

AIRPORT_PLAN_ENABLE = True
AIRPORT_PLANS = {}

ADMIN_AUTHORIZED = False

PRIVILEGE_TYPES = {
    1: 'LogEntry',
    2: 'SurfaceType',
    6: 'Assets',
    3: 'AirportSettings',
    4: 'SurfaceShape',
    5: 'AssetType',
    8: 'Assets',
    9: 'Assets',
    10: 'Assets',
    18: 'InspectionsTemplates',
    19: 'InspectionsData',
    20: 'InspectionsTemplates',
    22: 'ManageUsers',
    23: 'Roles',
    25: 'WorkOrders',
    29: 'WorkOrders',
    33: 'WorkOrders',
    36: 'WorkOrdersSchema',
    49: 'OperationsLogs',
}