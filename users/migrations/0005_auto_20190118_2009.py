# Generated by Django 2.1.3 on 2019-01-18 20:09

from django.db import migrations
from django.contrib.auth.management import create_permissions


def fill_config_with_all_permissions(apps, schema_editor):
    Airport = apps.get_model('airport', 'Airport')
    Inspection = apps.get_model('inspections', 'Inspection')
    InspectionParent = apps.get_model('inspections', 'InspectionParent')
    InspectionAnswer = apps.get_model('inspections', 'InspectionAnswer')
    WorkOrder = apps.get_model('work_orders', 'WorkOrder')
    WorkOrderSchema = apps.get_model('work_orders', 'WorkOrderSchema')
    Maintenance = apps.get_model('work_orders', 'Maintenance')
    Operations = apps.get_model('work_orders', 'Operations')
    Role = apps.get_model('users', 'Role')
    PermissionConfig = apps.get_model('users', 'PermissionConfig')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    if not Permission.objects.exists():
        for app_config in apps.get_app_configs():
            app_config.models_module = True
            create_permissions(app_config, apps=apps, verbosity=0)
            app_config.models_module = None

    permissions = []
    ct = ContentType.objects.get_for_model(Airport)
    permissions.append(
        Permission.objects.get(
            codename="can_modify_airport_settings",
            content_type=ct
        )
    )

    ct = ContentType.objects.get_for_model(Inspection)
    permissions.append(
        Permission.objects.get(
            codename="view_inspection",
            content_type=ct
        )
    )
    permissions.append(
        Permission.objects.get(
            codename="add_inspection",
            content_type=ct
        )
    )

    ct = ContentType.objects.get_for_model(InspectionAnswer)
    permissions.append(
        Permission.objects.get(
            codename="add_inspectionanswer",
            content_type=ct
        )
    )

    ct = ContentType.objects.get_for_model(InspectionParent)
    permissions.append(
        Permission.objects.get(
            codename="add_inspectionparent",
            content_type=ct
        )
    )

    ct = ContentType.objects.get_for_model(WorkOrder)
    permissions.append(
        Permission.objects.get(
            codename="view_workorder",
            content_type=ct
        )
    )
    permissions.append(
        Permission.objects.get(
            codename="add_workorder",
            content_type=ct
        )
    )

    ct = ContentType.objects.get_for_model(WorkOrderSchema)
    permissions.append(
        Permission.objects.get(
            codename="add_workorderschema",
            content_type=ct
        )
    )

    ct = ContentType.objects.get_for_model(Maintenance)
    permissions.append(
        Permission.objects.get(
            codename="add_maintenance",
            content_type=ct
        )
    )

    ct = ContentType.objects.get_for_model(Operations)
    permissions.append(
        Permission.objects.get(
            codename="add_operations",
            content_type=ct
        )
    )

    ct = ContentType.objects.get_for_model(Role)
    permissions.append(
        Permission.objects.get(
            codename="add_role",
            content_type=ct
        )
    )

    permissions.append(
        Permission.objects.get(
            codename="view_role",
            content_type=ct
        )
    )

    permissions.append(
        Permission.objects.get(
            codename="change_role",
            content_type=ct
        )
    )

    config = PermissionConfig()
    config.save()

    for p in permissions:
        config.permissions.add(p.id)


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0001_initial'),
        ('users', '0004_permissionconfig'),
        ('airport', '0013_auto_20190122_1716'),
        ('inspections', '0003_auto_20181217_1349'),
        ('work_orders', '0004_auto_20190117_2027'),
    ]

    operations = [
        migrations.RunPython(
            fill_config_with_all_permissions,
            migrations.RunPython.noop)
    ]
