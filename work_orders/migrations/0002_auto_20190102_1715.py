# Generated by Django 2.1.3 on 2019-01-02 17:15

from django.db import migrations


def create_work_orders_for_existing_airports(apps, schema_editor):
    Airport = apps.get_model('airport', 'Airport')
    WorkOrderForm = apps.get_model('work_orders', 'WorkOrderForm')
    MaintenanceForm = apps.get_model('work_orders', 'MaintenanceForm')
    OperationsForm = apps.get_model('work_orders', 'OperationsForm')

    WorkOrderSchema = apps.get_model('work_orders', 'WorkOrderSchema')
    MaintenanceSchema = apps.get_model(
        'work_orders', 'MaintenanceSchema')
    OperationsSchema = apps.get_model(
        'work_orders', 'OperationsSchema')

    for airport in Airport.objects.all():
        # For all existing Airports, create their base WorkOrderForm
        work_order = WorkOrderForm.objects.create(
            airport=airport,
            title="{} Work Order form".format(airport.code)
        )
        work_order_version = WorkOrderSchema()
        work_order_version.form = work_order
        work_order_version.status = 1
        work_order_version.save()

        maintenance_form = MaintenanceForm.objects.create(
            work_order=work_order,
            title="{} Maintenance schema".format(airport.code)
        )
        maintenance_version = MaintenanceSchema()
        maintenance_version.form = maintenance_form
        maintenance_version.status = 1
        maintenance_version.save()

        operations_form = OperationsForm.objects.create(
            work_order=work_order,
            title="{} Operations schema".format(airport.code)
        )
        operations_version = OperationsSchema()
        operations_version.form = operations_form
        operations_version.status = 1
        operations_version.save()


class Migration(migrations.Migration):

    dependencies = [
        ('work_orders', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(
            create_work_orders_for_existing_airports,
            migrations.RunPython.noop)
    ]
